(summary(tpm2)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm2)$coefficients['I(gdp_percap^2)','Estimate'])
#the first derivative (of the regression model's equation for the line) will equal 0 at the value of x equal to
# the coefficient for gdp per capita divided by negative 2 times the coefficient for gdp per capita squared
tpm3 <- lm((emit_lag/pop) ~ polyarchy + dem_stock + gdp_percap + I(gdp_percap^2) + as.factor(year),
data = (ghg %>% filter(year>= 2000))) #mimicking dem_stock_flow6 but converted to per capita
summary(tpm3)
(summary(tpm3)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm3)$coefficients['I(gdp_percap^2)','Estimate'])
tpm4 <- lm((emit_lag/pop) ~ polyarchy + gdp_percap + I(gdp_percap^2) + as.factor(year),
data = (ghg %>% filter(year>= 2000 & polyarchy >= 0.5))) #repeats tpm2 but limited to democracies
summary(tpm4)
(summary(tpm4)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm4)$coefficients['I(gdp_percap^2)','Estimate'])
#the first derivative (of the regression model's equation for the line) will equal 0 at the value of x equal to
# the coefficient for gdp per capita divided by negative 2 times the coefficient for gdp per capita squared
tpm5 <- lm((emit_lag/pop) ~ polyarchy + dem_stock + gdp_percap + I(gdp_percap^2) + as.factor(year),
data = (ghg %>% filter(year>= 2000 & polyarchy >= 0.5))) #repeat tpm3 but limit to democracies
summary(tpm5)
(summary(tpm5)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm5)$coefficients['I(gdp_percap^2)','Estimate'])
tpm6 <- lm((emit_lag/pop) ~ (polyarchy * gdp_percap) + I(gdp_percap^2) + as.factor(year),
data = (ghg %>% filter(year>= 2000 & polyarchy >= 0.5))) #mimic m5_inter
summary(tpm6)
(summary(tpm6)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm6)$coefficients['I(gdp_percap^2)','Estimate'])
tpm7 <- lm((emit_lag/pop) ~ (polyarchy * gdp_percap) + (polyarchy * I(gdp_percap^2)) + as.factor(year),
data = (ghg %>% filter(year>= 2000))) #mimic m6_inter
summary(tpm7)
1/
((-2 * summary(tpm7)$coefficients['I(gdp_percap^2)','Estimate']) / (summary(tpm7)$coefficients['gdp_percap','Estimate']) +
(-2 * summary(tpm7)$coefficients['polyarchy:I(gdp_percap^2)','Estimate']) / (summary(tpm7)$coefficients['gdp_percap','Estimate']))
tpm8 <- lm((emit_lag/pop) ~ (polyarchy * gdp_percap) + (polyarchy * I(gdp_percap^2)) + as.factor(year),
data = (ghg %>% filter(year>= 2000 & polyarchy >= 0.5))) #repeat for only democracies
summary(tpm8)
1/
((-2 * summary(tpm8)$coefficients['I(gdp_percap^2)','Estimate']) / (summary(tpm8)$coefficients['gdp_percap','Estimate']) +
(-2 * summary(tpm8)$coefficients['polyarchy:I(gdp_percap^2)','Estimate']) / (summary(tpm8)$coefficients['gdp_percap','Estimate']))
tpm9 <- lm((emit_lag/pop) ~ polyarchy + gdp_percap + I(gdp_percap^2) + as.factor(year),
data = (ghg)) #mimicking m2, but converted to per capita
summary(tpm9)
(summary(tpm9)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm9)$coefficients['I(gdp_percap^2)','Estimate'])
tpm10 <- lm((emit_lag/pop) ~ polyarchy + gdp_percap + I(gdp_percap^2) + as.factor(year),
data = (ghg %>% filter(polyarchy >= 0.5))) #repeat for only democracies
summary(tpm10)
(summary(tpm10)$coefficients['gdp_percap','Estimate']) / (-2 * summary(tpm10)$coefficients['I(gdp_percap^2)','Estimate'])
## natural experiment of democratization ----
#first identify episodes of democratization, two definitions
## years with polyarchy over 0.5 and immediately prior year under (democratizers)
## gains in polyarchy of a fixed amount. one sd? (liberalizers)
#filter to keep
## only those where democratization was sustained
## only those where prior autocracy lasted at least 10(?) years
# label candidate countries as eventual democratizers or persistent autocracies
# label years relative to democratization year
#dif in dif with 4 linear models splitting by category and by year zero
#visualize data ----
ad_colors <- c('autocracy' = 'firebrick', 'democracy' = 'dodgerblue')
adp_colors <- c('autocracy' = 'firebrick', 'democracy' = 'dodgerblue', 'populist' = 'darkorange')
vm <- m5 #specify which model to illustrate
polyarchy_scale = seq(from = 0, to = 1, by = 0.05)
year_scale = seq(from = min(ghg$year), to = (max(ghg$year) - 1), by = 1)
mimir <- data.frame(polyarchy = rep(polyarchy_scale, times = length(year_scale)),
year = rep(year_scale, each = length(polyarchy_scale)),
gdp = median(ghg$gdp, na.rm = TRUE),
pop = median(ghg$pop, na.rm = TRUE))
mimir <- mimir %>% mutate(era = as.factor(case_when(year < 1995 ~ as.character('naive'),
year >= 2000 ~ as.character('aware'))))
mimir <- mimir %>% filter(year >=2000 & year <= 2017) #needed to run m5. not sure how to automate
mimir <- mimir %>% mutate(expect_emit = predict(object = vm, newdata = mimir))
mimir %>% filter(year == 2017) %>%
ggplot(aes(x = polyarchy, y = expect_emit))+
geom_line()
#graphing by year is not illuminating because year in linear model simply changes the intercept
p <- mimir %>%
ggplot(aes(x = polyarchy, y = expect_emit))+
geom_line()+
ggtitle('Democracies Emit Less',
subtitle = ' Expected emissions in {frame_time}')+
theme(title = element_text(size = 22),
axis.title = element_text(size = 18, face = 'bold'),
axis.text = element_text(size = 16),
legend.text = element_text(size = 16))+
transition_time(year)+
ease_aes('cubic-in-out')
animate(p, fps = 5, end_pause = 30)
#more democracy predicts fewer emissions per gdp
ghg %>% mutate(emit_pergdp = emit_lag / (gdp)) %>%
ggplot(aes(x = polyarchy, y = log(emit_pergdp)))+
geom_point()+
geom_smooth()
#more democracy predicts U shaped relationship with emissions per capita, probably confounded by wealth
ghg %>% mutate(emit_percap = emit_lag / (pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_percap)))+
geom_point()+
geom_smooth()
#more democracy predicts fewer emissions per gdp per capita,
##all the action happens from middling to strong democracy
median_emit_rel_log <- ghg %>%
mutate(emit_rel = emit_lag / (gdp * pop)) %>%
summarize(median_emit_rel_log = median(log(emit_rel), na.rm = TRUE)) %>%
pull(median_emit_rel_log)
ghg %>% mutate(emit_rel = emit_lag / (gdp * pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_rel)))+
geom_point(alpha = 0.2)+
geom_smooth(size = 3, color = 'forestgreen', fill = 'forestgreen')+
geom_segment(aes(x=0, xend=1, y=median_emit_rel_log, yend=median_emit_rel_log), linetype = 'dashed')+
theme_minimal()+
labs(title = 'More Democracy, Fewer Emissions',
subtitle = '  1971-2017',
y = 'Emissions per GDP and Population',
x = 'Degree of Democracy')+
theme(title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.text.y = element_blank())
ggsave(filename = "./visuals/emissions_per_democracy.jpg",
width = 10,
height = 6,
units = 'in')
#more democracy predicts fewer emissions per gdp per capita,
##relationship existed before awareness of climate change; perhaps explanation is economy's sectoral composition?
##although still fewer emissions from middling democracies after awareness, so maybe evidence remains for hypothesis
ghg %>% filter(!is.na(era)) %>%
mutate(emit_rel = emit_lag / (gdp * pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_rel), color = era))+
geom_smooth()
#democracy breaks relationship between wealth and emissions
ghg %>% filter(year >= 2000, !is.na(polyarchy)) %>%
mutate(regime = if_else(polyarchy >= 0.5, 'democracy', 'autocracy'),
emit_percap = emit_lag / pop,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = regime, fill = regime))+
scale_color_manual(values = ad_colors)+
scale_fill_manual(values = ad_colors)+
coord_cartesian(ylim = c(0,44))+
geom_smooth(size = 3, alpha = 0.2)+
annotate('text', label = 'Autocracy', color = 'firebrick', size = 7, x = 37500, y = 35)+
annotate('text', label = 'Democracy', color = 'dodgerblue', size = 7, x = 62500, y = 5)+
geom_rug(sides = 'b', alpha = 0.3)+
scale_x_continuous(labels = scales::comma)+
theme_minimal()+
labs(title = 'Democracy Escapes Development Dilemma',
subtitle = '  Greenhouse Gas Emissions, 2000-2017',
y = 'Emissions per capita (metric tons)',
x = 'GDP per capita (USD)')+
theme(legend.position = 'none',
title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(r = 8)))
ggsave(filename = "./visuals/development_and_emissions_by_regime.jpg",
width = 10,
height = 6,
units = 'in')
#more democracy predicts fewer emissions per gdp per capita,
##relationship changed over time: first high emissions from strong autocracies,
##                                second, low emissions from strong democracies
p <- ghg %>%
filter(year <= 2017) %>% #because 2018 lacks future emissions data from 2019
mutate(emit_rel = emit_lag / (gdp * pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_rel)))+
geom_point()+
geom_smooth(size = 3, color = 'forestgreen', fill = 'forestgreen')+
geom_hline(yintercept = median_emit_rel_log, linetype = 'dashed')+
theme_minimal()+
ggtitle('Democracies Emit Less',
subtitle = ' Relative emissions in {frame_time}')+
xlab('Degree of Democracy')+
ylab('Emissions per Population and GDP, logged')+
scale_x_continuous(breaks = c(0,.25,.5,.75,1),
limits = c(0, 1.01))+
theme(title = element_text(size = 22),
axis.title = element_text(size = 18, face = 'bold'),
axis.text = element_text(size = 16),
axis.text.y = element_blank(),
legend.text = element_text(size = 16),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank())+
transition_time(as.integer(year))+
ease_aes('cubic-in-out')
animate(p, fps = 4, end_pause = 20, height = 600, width = 1000)
anim_save('./visuals/anim_democracies_emit_less.gif')
#wealthier countries emit less per unit of gdp
ghg %>%
mutate(emit_pergdp = emit_lag / gdp,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = log(gdp_percap), y = log(emit_pergdp)))+
geom_smooth()
#that relationship is more pronounced among democracies
ghg %>% filter(!is.na(polyarchy)) %>%
mutate(emit_pergdp = emit_lag / gdp,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = log(gdp_percap), y = log(emit_pergdp), color = (polyarchy >= 0.5)))+
geom_smooth(size = 1.5)+
geom_point(alpha = 0.1)
#wealth in democracies led to lower emissions per GDP in both eras
ghg %>% filter(!is.na(polyarchy), !is.na(era)) %>%
mutate(emit_pergdp = emit_lag / gdp,
gdp_percap = gdp / pop,
dem = if_else(polyarchy>=0.5, 'democracy', 'autocracy')) %>%
group_by(dem, era) %>%
mutate(dem_era = paste(dem, era)) %>%
ungroup() %>%
ggplot(aes(x = log(gdp_percap), y = log(emit_pergdp), color = dem_era))+
geom_smooth()
#democracy weakens but still produces the relationship between wealth and absolute emissionss
polyarchy_scale = seq(from = 0, to = 1, by = 0.05)
gdp_scale = seq(from = min(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE),
to = max(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE),
by = ((max(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE)) -
(min(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE))) /
99)
mimir <- data.frame(polyarchy = rep(polyarchy_scale, times = length(gdp_scale)),
gdp = rep(gdp_scale, each = length(polyarchy_scale)),
year = 2017,
pop = median(ghg$pop, na.rm = TRUE))
mimir <- mimir %>% mutate(gdp_sq = gdp * gdp)
mimir <- mimir %>% mutate(expect_emit = predict(object = m6_inter, newdata = mimir))
mimir %>% mutate(regime = case_when(polyarchy == 0.8 ~ 'democracy',
polyarchy == 0.2 ~ 'autocracy',
TRUE ~ as.character(NA))) %>%
filter(!is.na(regime))%>%
ggplot(aes(x = gdp/pop, y = expect_emit, color = regime))+
geom_point()
#populism as middle state between democracy and autocracy
ghg %>% filter(!is.na(regime), year >= 2000) %>%
mutate(emit_percap = emit_lag / pop,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = regime, fill = regime))+
scale_color_manual(values = adp_colors)+
scale_fill_manual(values = adp_colors)+
geom_smooth(size = 3, alpha = 0.2)+
geom_rug(sides = 'b', alpha = 0.3)+
coord_cartesian(ylim = c(0, 44))+
scale_x_continuous(labels = scales::comma)+
annotate('text', label = 'Autocracy', color = 'firebrick', size = 7, x = 37500, y = 35)+
annotate('text', label = 'Populism', color = 'darkorange', size = 7, x = 62500, y = 25)+
annotate('text', label = 'Democracy', color = 'dodgerblue', size = 7, x = 62500, y = 5)+
theme_minimal()+
labs(title = 'Populism: Like Slightly Autocratic Democracy',
subtitle = '  2000-2017',
y = 'Emissions per capita (metric tons)',
x = 'GDP per capita (US$)')+
theme(legend.position = 'none',
title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(r = 8)))
ggsave(filename = "./visuals/populism_emissions.jpg",
width = 10,
height = 6,
units = 'in')
#repeat, animating by year - not very illuminating
p <- ghg %>% filter(!is.na(polyarchy), year <=2017) %>%
mutate(emit_percap = emit_lag / pop,
gdp_percap = gdp / pop,
democracy = if_else(polyarchy >= 0.5, TRUE, FALSE)) %>% #coded populists too few to model with loess
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = democracy))+
geom_smooth()+
transition_time(as.integer(year))+
ease_aes('cubic-in-out')
animate(p)
ghg %>% filter(!is.na(regime)) %>%
mutate(emit_pergdp = emit_lag / gdp,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = emit_pergdp, color = regime))+
coord_cartesian(ylim = c(0,0.000025))+
geom_smooth() #poor autocracies dominate relationship with emissions per gdp
ghg %>% filter(!is.na(regime)) %>%
mutate(emit_rel = emit_lag / (gdp * pop),
gdp_percap = gdp / pop) %>%
ggplot(aes(x = tenure_aggregate, y = emit_rel, color = regime))+
geom_smooth() #maybe middle-state phenomenon over leader tenure, but lose most autocratic codings by relying on tenure column
ghg %>% filter(!is.na(regime)) %>%
mutate(emit_pergdp = emit_lag / gdp,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = tenure_aggregate, y = emit_pergdp, color = regime))+
geom_smooth() #clearer middle-state phenomenon over leader tenure vs emissions per capita
#but tenure not showing anything interesting, so why break out this way?
#plot country emissions over time
ggplot(data = ghg, aes(x = year, y = (1000 * emit) / pop, color = country_code))+
geom_line()+
theme(legend.position = "none")
##simulate gdp per capita vs emissions, separated by regime type
gdp_scale = seq(from = min(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE),
to = max(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE),
by = ((max(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE)) -
(min(ghg$gdp_percap, na.rm = TRUE) * median(ghg$pop, na.rm = TRUE))) /
99)
mimir <- data.frame(regime = rep(unique(ghg$regime[!is.na(ghg$regime)]), each = length(gdp_scale)),
gdp = rep(gdp_scale, times = length(unique(ghg$regime[!is.na(ghg$regime)]))),
pop = median(ghg$pop, na.rm = TRUE),
year = 2017)
mimir$gdp_sq <- mimir$gdp * mimir$gdp
mimir <- mimir %>% mutate(expect_emit = predict(object = pop_discrete_inter_m, newdata = mimir))
ggplot(data = mimir, aes(x = gdp/pop, y = expect_emit, color = regime))+
geom_point()
##illustrate models' expected kuznets curve for democracies and autocracies, by era----
m2pc_dems <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(polyarchy >= 0.5))
summary(m2pc_dems)
m2pc_autos <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(polyarchy < 0.5))
summary(m2pc_autos)
naive_pc_dems <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(year < 2000, polyarchy >= 0.5))
summary(naive_pc_dems)
naive_pc_autos <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(year < 2000, polyarchy < 0.5))
summary(naive_pc_autos)
m6pc_dems <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(year >= 2000, polyarchy >= 0.5))
summary(m6pc_dems)
m6pc_autos <- lm((emit_lag / pop) ~ gdp_percap + I(gdp_percap^2) + as.factor(year),
data = ghg %>% filter(year >= 2000, polyarchy < 0.5))
summary(m6pc_autos)
kc <- data.frame(gdp_percap = seq(from = 0, to = 120000, by = 1000))
kc <- kc %>% mutate(gdp_percap_sq = gdp_percap^2,
emit_auto = summary(m2pc_autos)$coefficients['(Intercept)',1] +
(gdp_percap * summary(m2pc_autos)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(m2pc_autos)$coefficients['I(gdp_percap^2)',1]),
emit_dem = summary(m2pc_dems)$coefficients['(Intercept)',1] +
(gdp_percap * summary(m2pc_dems)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(m2pc_dems)$coefficients['I(gdp_percap^2)',1]))
ggplot(data = kc, aes(x = gdp_percap))+
geom_point(aes(y = emit_auto), color = 'firebrick')+
geom_point(aes(y = emit_dem), color = 'dodgerblue')
kc <- data.frame(gdp_percap = seq(from = 0, to = 120000, by = 1000))
kc <- kc %>% mutate(gdp_percap_sq = gdp_percap^2,
emit_auto = summary(naive_pc_autos)$coefficients['(Intercept)',1] +
(gdp_percap * summary(naive_pc_autos)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(naive_pc_autos)$coefficients['I(gdp_percap^2)',1]),
emit_dem = summary(naive_pc_dems)$coefficients['(Intercept)',1] +
(gdp_percap * summary(naive_pc_dems)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(naive_pc_dems)$coefficients['I(gdp_percap^2)',1]))
ggplot(data = kc, aes(x = gdp_percap))+
geom_point(aes(y = emit_auto), color = 'firebrick')+
geom_point(aes(y = emit_dem), color = 'dodgerblue')
kc <- data.frame(gdp_percap = seq(from = 0, to = 120000, by = 1000))
kc <- kc %>% mutate(gdp_percap_sq = gdp_percap^2,
emit_auto = summary(m6pc_autos)$coefficients['(Intercept)',1] +
(gdp_percap * summary(m6pc_autos)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(m6pc_autos)$coefficients['I(gdp_percap^2)',1]),
emit_dem = summary(m6pc_dems)$coefficients['(Intercept)',1] +
(gdp_percap * summary(m6pc_dems)$coefficients['gdp_percap',1]) +
(gdp_percap_sq * summary(m6pc_dems)$coefficients['I(gdp_percap^2)',1]))
ggplot(data = kc, aes(x = gdp_percap))+
geom_point(aes(y = emit_auto), color = 'firebrick')+
geom_point(aes(y = emit_dem), color = 'dodgerblue')
eu <- ghg %>% filter(country_name %in% eu_list) %>%
group_by(year) %>%
summarize(country_name = "European Union",
country_code = 'EU',
gdp = sum(gdp, na.rm = TRUE),
emit = sum(emit, na.rm = TRUE),
pop = sum(pop, na.rm = TRUE),
gdp_sq = gdp^2,
era = NA,
polyarchy = mean(polyarchy, na.rm = TRUE),
libdem = mean(libdem, na.rm = TRUE),
partipdem = mean(partipdem, na.rm = TRUE),
delibdem = mean(delibdem, na.rm = TRUE),
egaldem = mean(egaldem, na.rm = TRUE),
ideology = NA,
leader = NA,
region = NA,
tenure_aggregate = NA,
tenure_term = NA,
term = NA,
president = NA,
populism_score = mean(populism_score, na.rm = TRUE),
in_office = NA,
regime = NA,
dem_stock = mean(dem_stock, na.rm = TRUE),
decades_dem = mean(decades_dem, na.rm = TRUE),
emit_pergdp = emit / gdp,
gdp_percap = gdp / pop,
dem = 'democracy',
dem_era = NA,
emit_lag = sum(emit_lag, na.rm = TRUE),
polyarchy_z = NA,
gdp_z = NA,
gdp_sq_z = NA,
pop_z = NA,
dem_stock_z = NA,
emit_z = NA,
emit_lag_z = NA,
populism_z = NA)
#democracy breaks relationship between wealth and emissions
ghg %>% filter(year >= 2000, !is.na(polyarchy)) %>%
mutate(regime = if_else(polyarchy >= 0.5, 'democracy', 'autocracy'),
emit_percap = emit_lag / pop,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = regime, fill = regime))+
scale_color_manual(values = ad_colors)+
scale_fill_manual(values = ad_colors)+
coord_cartesian(ylim = c(0,44))+
geom_smooth(size = 3, alpha = 0.2)+
annotate('text', label = 'Autocracy', color = 'firebrick', size = 7, x = 37500, y = 35)+
annotate('text', label = 'Democracy', color = 'dodgerblue', size = 7, x = 62500, y = 5)+
geom_rug(sides = 'b', alpha = 0.3)+
scale_x_continuous(labels = scales::comma)+
theme_minimal()+
labs(title = 'Democracy Escapes Development Dilemma',
subtitle = '  Greenhouse Gas Emissions, 2000-2017',
y = 'Emissions per capita (metric tons)',
x = 'GDP per capita (USD)')+
theme(legend.position = 'none',
title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(r = 8)))
ggsave(filename = "./visuals/development_and_emissions_by_regime.jpg",
width = 10,
height = 6,
units = 'in')
ghg %>% mutate(emit_rel = emit_lag / (gdp * pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_rel)))+
geom_point(alpha = 0.2)+
geom_smooth(size = 3, color = 'forestgreen', fill = 'forestgreen')+
geom_segment(aes(x=0, xend=1, y=median_emit_rel_log, yend=median_emit_rel_log), linetype = 'dashed')+
theme_minimal()+
labs(title = 'More Democracy, Fewer Emissions',
subtitle = '  Greenhouse Gase Emissions, 1971-2017',
y = 'Emissions per GDP and Population',
x = 'Degree of Democracy')+
theme(title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.text.y = element_blank())
ggsave(filename = "./visuals/emissions_per_democracy.jpg",
width = 10,
height = 6,
units = 'in')
#democracy breaks relationship between wealth and emissions
ghg %>% filter(year >= 2000, !is.na(polyarchy)) %>%
mutate(regime = if_else(polyarchy >= 0.5, 'democracy', 'autocracy'),
emit_percap = emit_lag / pop,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = regime, fill = regime))+
scale_color_manual(values = ad_colors)+
scale_fill_manual(values = ad_colors)+
coord_cartesian(ylim = c(0,44))+
geom_smooth(size = 3, alpha = 0.2)+
annotate('text', label = 'Autocracy', color = 'firebrick', size = 7, x = 37500, y = 35)+
annotate('text', label = 'Democracy', color = 'dodgerblue', size = 7, x = 62500, y = 5)+
geom_rug(sides = 'b', alpha = 0.3)+
scale_x_continuous(labels = scales::comma)+
theme_minimal()+
labs(title = 'Democracy Escapes Development Dilemma',
subtitle = '  Greenhouse Gas Emissions, 2000-2017',
y = 'Emissions per capita (metric tons)',
x = 'GDP per capita (USD)')+
theme(legend.position = 'none',
title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(r = 8)))
ggsave(filename = "./visuals/development_and_emissions_by_regime.jpg",
width = 10,
height = 6,
units = 'in')
#populism as middle state between democracy and autocracy
ghg %>% filter(!is.na(regime), year >= 2000) %>%
mutate(emit_percap = emit_lag / pop,
gdp_percap = gdp / pop) %>%
ggplot(aes(x = gdp_percap, y = (1000 * emit_percap), color = regime, fill = regime))+
scale_color_manual(values = adp_colors)+
scale_fill_manual(values = adp_colors)+
geom_smooth(size = 3, alpha = 0.2)+
geom_rug(sides = 'b', alpha = 0.3)+
coord_cartesian(ylim = c(0, 44))+
scale_x_continuous(labels = scales::comma)+
annotate('text', label = 'Autocracy', color = 'firebrick', size = 7, x = 37500, y = 35)+
annotate('text', label = 'Populism', color = 'darkorange', size = 7, x = 62500, y = 25)+
annotate('text', label = 'Democracy', color = 'dodgerblue', size = 7, x = 62500, y = 5)+
theme_minimal()+
labs(title = 'Populism: Like Slightly Autocratic Democracy',
subtitle = '  Greenhouse Gas Emissions, 2000-2017',
y = 'Emissions per capita (metric tons)',
x = 'GDP per capita (US$)')+
theme(legend.position = 'none',
title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(r = 8)))
ggsave(filename = "./visuals/populism_emissions.jpg",
width = 10,
height = 6,
units = 'in')
ghg %>% mutate(emit_rel = emit_lag / (gdp * pop)) %>%
ggplot(aes(x = polyarchy, y = log(emit_rel)))+
geom_point(alpha = 0.2)+
geom_smooth(size = 3, color = 'forestgreen', fill = 'forestgreen')+
geom_segment(aes(x=0, xend=1, y=median_emit_rel_log, yend=median_emit_rel_log), linetype = 'dashed')+
theme_minimal()+
labs(title = 'More Democracy, Fewer Emissions',
subtitle = '  Greenhouse Gase Emissions, 1971-2017',
y = 'Emissions per GDP and Population',
x = 'Degree of Democracy')+
theme(title = element_text(size = 20, face = 'bold'),
axis.title = element_text(size = 18, face = 'bold'),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 16),
axis.text.y = element_blank())
ggsave(filename = "./visuals/emissions_per_democracy.jpg",
width = 10,
height = 6,
units = 'in')
